/*
 * workflow_execution.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package nextflow.ga4gh.wes.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * .
 */
@ApiModel(description = ".")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-01T15:34:23.960Z")
public class InlineResponse200 {
  @SerializedName("workflow_type_versions")
  private Map<String, AvailableWorkflowTypesSupportedByThisWES> workflowTypeVersions = null;

  @SerializedName("supported_wes_versions")
  private List<String> supportedWesVersions = null;

  @SerializedName("supported_filesystem_protocols")
  private List<String> supportedFilesystemProtocols = null;

  @SerializedName("engine_versions")
  private Map<String, String> engineVersions = null;

  @SerializedName("system_state_counts")
  private Map<String, Long> systemStateCounts = null;

  @SerializedName("key_values")
  private Map<String, String> keyValues = null;

  public InlineResponse200 workflowTypeVersions(Map<String, AvailableWorkflowTypesSupportedByThisWES> workflowTypeVersions) {
    this.workflowTypeVersions = workflowTypeVersions;
    return this;
  }

  public InlineResponse200 putWorkflowTypeVersionsItem(String key, AvailableWorkflowTypesSupportedByThisWES workflowTypeVersionsItem) {
    if (this.workflowTypeVersions == null) {
      this.workflowTypeVersions = new HashMap<String, AvailableWorkflowTypesSupportedByThisWES>();
    }
    this.workflowTypeVersions.put(key, workflowTypeVersionsItem);
    return this;
  }

   /**
   * Get workflowTypeVersions
   * @return workflowTypeVersions
  **/
  @ApiModelProperty(value = "")
  public Map<String, AvailableWorkflowTypesSupportedByThisWES> getWorkflowTypeVersions() {
    return workflowTypeVersions;
  }

  public void setWorkflowTypeVersions(Map<String, AvailableWorkflowTypesSupportedByThisWES> workflowTypeVersions) {
    this.workflowTypeVersions = workflowTypeVersions;
  }

  public InlineResponse200 supportedWesVersions(List<String> supportedWesVersions) {
    this.supportedWesVersions = supportedWesVersions;
    return this;
  }

  public InlineResponse200 addSupportedWesVersionsItem(String supportedWesVersionsItem) {
    if (this.supportedWesVersions == null) {
      this.supportedWesVersions = new ArrayList<String>();
    }
    this.supportedWesVersions.add(supportedWesVersionsItem);
    return this;
  }

   /**
   * Get supportedWesVersions
   * @return supportedWesVersions
  **/
  @ApiModelProperty(value = "")
  public List<String> getSupportedWesVersions() {
    return supportedWesVersions;
  }

  public void setSupportedWesVersions(List<String> supportedWesVersions) {
    this.supportedWesVersions = supportedWesVersions;
  }

  public InlineResponse200 supportedFilesystemProtocols(List<String> supportedFilesystemProtocols) {
    this.supportedFilesystemProtocols = supportedFilesystemProtocols;
    return this;
  }

  public InlineResponse200 addSupportedFilesystemProtocolsItem(String supportedFilesystemProtocolsItem) {
    if (this.supportedFilesystemProtocols == null) {
      this.supportedFilesystemProtocols = new ArrayList<String>();
    }
    this.supportedFilesystemProtocols.add(supportedFilesystemProtocolsItem);
    return this;
  }

   /**
   * The filesystem protocols supported by this service, currently these may include common protocols such as &#39;http&#39;, &#39;https&#39;, &#39;sftp&#39;, &#39;s3&#39;, &#39;gs&#39;, &#39;file&#39;, &#39;synapse&#39;, or others as supported by this service.
   * @return supportedFilesystemProtocols
  **/
  @ApiModelProperty(value = "The filesystem protocols supported by this service, currently these may include common protocols such as 'http', 'https', 'sftp', 's3', 'gs', 'file', 'synapse', or others as supported by this service.")
  public List<String> getSupportedFilesystemProtocols() {
    return supportedFilesystemProtocols;
  }

  public void setSupportedFilesystemProtocols(List<String> supportedFilesystemProtocols) {
    this.supportedFilesystemProtocols = supportedFilesystemProtocols;
  }

  public InlineResponse200 engineVersions(Map<String, String> engineVersions) {
    this.engineVersions = engineVersions;
    return this;
  }

  public InlineResponse200 putEngineVersionsItem(String key, String engineVersionsItem) {
    if (this.engineVersions == null) {
      this.engineVersions = new HashMap<String, String>();
    }
    this.engineVersions.put(key, engineVersionsItem);
    return this;
  }

   /**
   * Get engineVersions
   * @return engineVersions
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getEngineVersions() {
    return engineVersions;
  }

  public void setEngineVersions(Map<String, String> engineVersions) {
    this.engineVersions = engineVersions;
  }

  public InlineResponse200 systemStateCounts(Map<String, Long> systemStateCounts) {
    this.systemStateCounts = systemStateCounts;
    return this;
  }

  public InlineResponse200 putSystemStateCountsItem(String key, Long systemStateCountsItem) {
    if (this.systemStateCounts == null) {
      this.systemStateCounts = new HashMap<String, Long>();
    }
    this.systemStateCounts.put(key, systemStateCountsItem);
    return this;
  }

   /**
   * The system statistics, key is the statistic, value is the count of workflows in that state. See the State enum for the possible keys.
   * @return systemStateCounts
  **/
  @ApiModelProperty(value = "The system statistics, key is the statistic, value is the count of workflows in that state. See the State enum for the possible keys.")
  public Map<String, Long> getSystemStateCounts() {
    return systemStateCounts;
  }

  public void setSystemStateCounts(Map<String, Long> systemStateCounts) {
    this.systemStateCounts = systemStateCounts;
  }

  public InlineResponse200 keyValues(Map<String, String> keyValues) {
    this.keyValues = keyValues;
    return this;
  }

  public InlineResponse200 putKeyValuesItem(String key, String keyValuesItem) {
    if (this.keyValues == null) {
      this.keyValues = new HashMap<String, String>();
    }
    this.keyValues.put(key, keyValuesItem);
    return this;
  }

   /**
   * Get keyValues
   * @return keyValues
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getKeyValues() {
    return keyValues;
  }

  public void setKeyValues(Map<String, String> keyValues) {
    this.keyValues = keyValues;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse200 inlineResponse200 = (InlineResponse200) o;
    return Objects.equals(this.workflowTypeVersions, inlineResponse200.workflowTypeVersions) &&
        Objects.equals(this.supportedWesVersions, inlineResponse200.supportedWesVersions) &&
        Objects.equals(this.supportedFilesystemProtocols, inlineResponse200.supportedFilesystemProtocols) &&
        Objects.equals(this.engineVersions, inlineResponse200.engineVersions) &&
        Objects.equals(this.systemStateCounts, inlineResponse200.systemStateCounts) &&
        Objects.equals(this.keyValues, inlineResponse200.keyValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workflowTypeVersions, supportedWesVersions, supportedFilesystemProtocols, engineVersions, systemStateCounts, keyValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse200 {\n");
    
    sb.append("    workflowTypeVersions: ").append(toIndentedString(workflowTypeVersions)).append("\n");
    sb.append("    supportedWesVersions: ").append(toIndentedString(supportedWesVersions)).append("\n");
    sb.append("    supportedFilesystemProtocols: ").append(toIndentedString(supportedFilesystemProtocols)).append("\n");
    sb.append("    engineVersions: ").append(toIndentedString(engineVersions)).append("\n");
    sb.append("    systemStateCounts: ").append(toIndentedString(systemStateCounts)).append("\n");
    sb.append("    keyValues: ").append(toIndentedString(keyValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

