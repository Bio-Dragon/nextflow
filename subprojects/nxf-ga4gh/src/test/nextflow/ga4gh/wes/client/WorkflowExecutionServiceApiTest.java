/*
 * workflow_execution.proto
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: version not set
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package nextflow.ga4gh.wes.client;

import nextflow.ga4gh.wes.client.api.WorkflowExecutionServiceApi;
import nextflow.ga4gh.wes.client.model.InlineResponse200;
import nextflow.ga4gh.wes.client.model.InlineResponse2001;
import nextflow.ga4gh.wes.client.model.InlineResponse2002;
import nextflow.ga4gh.wes.client.model.InlineResponse2003;
import nextflow.ga4gh.wes.client.model.ReturnEnvelopeForWorkflowListing;
import nextflow.ga4gh.wes.client.model.WorkflowRequestObject;
import org.junit.Ignore;
import org.junit.Test;

/**
 * API tests for WorkflowExecutionServiceApi
 */
@Ignore
public class WorkflowExecutionServiceApiTest {

    private final WorkflowExecutionServiceApi api = new WorkflowExecutionServiceApi();

    
    /**
     * Cancel a running workflow
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelJobTest() throws ApiException {
        String workflowId = null;
        InlineResponse2001 response = api.cancelJob(workflowId);

        // TODO: test validations
    }
    
    /**
     * Get information about Workflow Execution Service.  May include information related (but not limited to) the workflow descriptor formats, versions supported, the WES API versions supported, and information about general the service availability.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServiceInfoTest() throws ApiException {
        InlineResponse200 response = api.getServiceInfo();

        // TODO: test validations
    }
    
    /**
     * Get detailed info about a running workflow
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowLogTest() throws ApiException {
        String workflowId = null;
        InlineResponse2002 response = api.getWorkflowLog(workflowId);

        // TODO: test validations
    }
    
    /**
     * Get quick status info about a running workflow
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowStatusTest() throws ApiException {
        String workflowId = null;
        InlineResponse2003 response = api.getWorkflowStatus(workflowId);

        // TODO: test validations
    }
    
    /**
     * List the workflows, this endpoint will list the workflows in order of oldest to newest.  There is no guarantee of live updates as the user traverses the pages, the behavior should be decided (and documented) by each implementation.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listWorkflowsTest() throws ApiException {
        Long pageSize = null;
        String pageToken = null;
        String keyValueSearch = null;
        ReturnEnvelopeForWorkflowListing response = api.listWorkflows(pageSize, pageToken, keyValueSearch);

        // TODO: test validations
    }
    
    /**
     * Run a workflow, this endpoint will allow you to create a new workflow request and retrieve its tracking ID to monitor its progress.  An important assumption in this endpoint is that the workflow_params JSON will include parameterizations along with input and output files.  The latter two may be on S3, Google object storage, local filesystems, etc.  This specification makes no distinction.  However, it is assumed that the submitter is using URLs that this system both understands and can access. For Amazon S3, this could be accomplished by given the credentials associated with a WES service access to a particular bucket.  The details are important for a production system and user on-boarding but outside the scope of this spec.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void runWorkflowTest() throws ApiException {
        WorkflowRequestObject body = null;
        InlineResponse2001 response = api.runWorkflow(body);

        // TODO: test validations
    }
    
}
